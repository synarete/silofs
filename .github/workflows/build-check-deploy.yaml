---
name: "Silofs CI"
on:
  push:
    tags:
      - 'v0*'
    branches:
      - main
      - next
      - '!_*'
      - '!gh-pages'
  pull_request:
    branches:
      - $default-branch
jobs:
  prepare:
    name: Start workflow
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: echo "repo ${{ github.repository }} "
      - run: echo "ref ${{ github.ref }} ${{ github.sha }}"
      - run: echo "sha ${{ github.sha }}"
      - name: System
        run: uname -a
      - name: Update
        run: sudo apt-get update
      - name: Install deps
        run: sudo ./dist/deb/install-deb-deps.sh
      - name: Require build tools
        run: ./scripts/requiredeps.sh
      - name: Require install tool
        run: apt --version
  gitlint:
    name: Lint commit message
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - uses: actions/checkout@v3
      - name: Update
        run: sudo apt-get update
      - name: Install deps
        run: sudo apt-get install -y git gitlint
      - name: Check commit message
        run: gitlint --config .gitlint.conf --target ./ lint
  codelint:
    name: Lint code style
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - uses: actions/checkout@v3
      - name: Update
        run: sudo apt-get update
      - name: Install deps
        run: sudo apt-get install -y astyle python3
      - name: Verify code style
        run: ./cstylefmt.sh
      - name: Require clean code
        run: git diff-index --quiet HEAD
  build-devel:
    name: Build with developer flags
    needs:
      - prepare
      - codelint
      - gitlint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Update
        run: sudo apt-get update
      - name: Install deps
        run: sudo ./dist/deb/install-deb-deps.sh
      - name: Build with GCC
        run: make -f devel.mk
      - name: Re-build with Clang
        run: |
          make -f devel.mk reset
          make -f devel.mk CC=clang
      - name: Re-build with optimization
        run: |
          make -f devel.mk reset
          make -f devel.mk O=2
  build-check:
    name: Build and check
    needs:
      - prepare
      - codelint
      - gitlint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Update
        run: sudo apt-get update
      - name: Install deps
        run: sudo ./dist/deb/install-deb-deps.sh
      - name: Bootstrap
        run: ./bootstrap
      - name: Configure
        run: ./configure --enable-unitests=1
      - name: Build
        run: make
      - name: Check
        run: make check
  static-analyze:
    name: Run static-code analysis
    runs-on: ubuntu-latest
    needs:
      - prepare
      - codelint
      - gitlint
    steps:
      - uses: actions/checkout@v3
      - name: Update
        run: sudo apt-get update
      - name: Install deps
        run: sudo ./dist/deb/install-deb-deps.sh
      - name: Run clang static-analyzer
        run: ./scripts/clangscanbuild.sh
  check-py-code:
    name: Check python code
    runs-on: ubuntu-latest
    needs:
      - prepare
      - codelint
      - gitlint
    steps:
      - uses: actions/checkout@v3
      - name: Update
        run: sudo apt-get update
      - name: Install deps
        run: |
          sudo ./dist/deb/install-deb-deps.sh
          sudo ./dist/deb/install-deb-extras.sh
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Run python checkers
        run: ./py/pycheck.sh citests
  build-rpm-package:
    name: Build rpm package
    runs-on: ubuntu-latest
    needs:
      - build-check
      - build-devel
      - static-analyze
      - check-py-code
    steps:
      - uses: actions/checkout@v3
      - name: Update
        run: sudo apt-get update
      - name: Install deps
        run: sudo ./dist/deb/install-deb-deps.sh
      - name: Install rpm build tools
        run: sudo apt-get install -y rpm
      - name: Build rpm package
        run: ./dist/rpm/packagize-rpm.sh
  build-install-deb-package:
    name: Build and install deb package
    runs-on: ubuntu-latest
    needs:
      - build-check
      - build-devel
      - static-analyze
      - check-py-code
    steps:
      - uses: actions/checkout@v3
      - name: Update
        run: sudo apt-get update
      - name: Install deps
        run: sudo ./dist/deb/install-deb-deps.sh
      - name: Packagize
        run: ./dist/deb/packagize-deb.sh
      - name: Install
        run: sudo apt install ./build/dist/silofs_*.deb
      - name: Verify installation
        run: silofs --version
      - name: Prepare service
        run: |
          sudo mkdir -p /mnt/test
          sudo chmod 700 /mnt/test
          sudo chown $(id -u):$(id -g) /mnt/test
          sudo sh -c "echo /mnt/test >> /etc/silofs/mountd.conf"
          sudo systemctl restart silofs-mountd.service
          sudo systemctl status silofs-mountd.service
          sleep 10
      - name: Make file-system
        run: |
          silofs init ./build/repo
          silofs mkfs -s 8G -p 12345678 ./build/repo/test
      - name: Mount file-system
        run: |
          silofs mount -p 12345678 ./build/repo/test /mnt/test
          mkdir /mnt/test/A
          echo "hello, world" > /mnt/test/A/hello
          cat /mnt/test/A/hello
          silofs lsmnt
      - name: Umount file-system
        run: silofs umount /mnt/test
      - name: Cleanups
        run: rm -rf ./build/repo
  build-install-by-autotools:
    name: Build and install by autotools
    runs-on: ubuntu-latest
    needs:
      - build-check
      - build-devel
      - static-analyze
      - check-py-code
    steps:
      - uses: actions/checkout@v3
      - name: Update
        run: sudo apt-get update
      - name: Install deps
        run: sudo ./dist/deb/install-deb-deps.sh
      - name: Build and install
        run: |
          ./bootstrap
          ./configure --sysconfdir=/etc
          make
          sudo make install
      - name: Verify installation
        run: silofs --version
      - name: Prepare service
        run: |
          sudo mkdir -p /mnt/test
          sudo chmod 700 /mnt/test
          sudo chown $(id -u):$(id -g) /mnt/test
          sudo sh -c "echo /mnt/test >> /etc/silofs/mountd.conf"
          sudo systemctl restart silofs-mountd.service
          sudo systemctl status silofs-mountd.service
          sleep 10
      - name: Make file-system
        run: |
          silofs init ./build/repo
          silofs mkfs -s 8G -p 12345678 ./build/repo/test
      - name: Mount file-system
        run: |
          silofs mount -p 12345678 ./build/repo/test /mnt/test
          silofs lsmnt
      - name: I/O operations
        run: |
          mkdir /mnt/test/A
          echo "hello, world" > /mnt/test/A/hello
          cat /mnt/test/A/hello
          cp /mnt/test/A/hello /mnt/test/A/world
          diff /mnt/test/A/hello /mnt/test/A/world
          mv /mnt/test/A/hello /mnt/test/A/world
          cat /mnt/test/A/world
          unlink /mnt/test/A/world
          rmdir /mnt/test/A
      - name: Umount file-system
        run: silofs umount /mnt/test
      - name: Cleanups
        run: rm -rf ./build/repo
      - name: Remove installation
        run: |
          sudo systemctl stop silofs-mountd.service
          sleep 1
          sudo make uninstall
          make clean
  done:
    name: End workflow
    runs-on: ubuntu-latest
    needs:
      - build-rpm-package
      - build-install-deb-package
      - build-install-by-autotools
    steps:
      - name: Done
        run: date
