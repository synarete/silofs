Name: silofs
Summary:        Silofs: Stored In Large Objects File-System
Version:        @PACKAGE_VERSION@
Release:        @PACKAGE_RELEASE@.@PACKAGE_REVISION@%{?dist}
License:        GPLv3
Group:          Applications/Archiving
URL:            https://synarete.github.io/silofs
Source:         %{name}-%{version}.tar.gz
BuildRoot:      %{_tmppath}/%{name}-%{version}-%{release}.%{_arch}
Requires:       libcap
Requires:       libuuid
Requires:       libgcrypt
Requires:       libunwind
%if 0%{?fedora} >= 36
BuildRequires:  libcap-devel
BuildRequires:  libuuid-devel
BuildRequires:  libgcrypt-devel
BuildRequires:  libunwind-devel
%endif

%{?systemd_requires}

%description
Silofs is a user-space file-system for storing large volumes of data
as encrypted blobs. It allows normal users to create an isolated
storage area, with its own private key, and mount it on local host.
When mounted, users may manipulate their data as they would do with any
other file-system, while the actual data is transparently encrypted and
stored within a local repository as opaque blobs. Other processes,
which have the appropriate UNIX credentials may access those blobs as
regular files, but they can not view their content. This model allows
common Linux utilities to backup or archive the content of the
repository into remote location without compromising the integrity of
the underlying data.

%package devel
Summary: Silofs testing utilities and development files
Group: Development/Tools
Requires: %{name}%{?_isa} = %{version}-%{release}
Requires: python3

%description devel
Various testing programs for silofs.

%prep
%setup -q -n %{name}-%{version}

%build
%configure
%{__make}

%check
# %{__make} check

%install
%make_install

%clean
%{__rm} -rf %{buildroot}

%files
%defattr(-, root, root)
%{_bindir}/%{name}
%{_sbindir}/%{name}-mountd
%{_sbindir}/*.%{name}
%exclude %{_libdir}/lib%{name}*.so.*
%exclude %{_libdir}/lib%{name}*.*a
%config(noreplace) %{_sysconfdir}/%{name}/*.conf
%{_mandir}/man1/%{name}.1*
%{_mandir}/man8/%{name}-*.8*
%{_datarootdir}/bash-completion/completions/%{name}
%{_docdir}/%{name}/*
%if 0%{?_unitdir:1}
%dir %{_localstatedir}/%{_rundir}/%{name}
%{_unitdir}/%{name}-mountd.service
%else
%exclude %{_prefix}/lib/systemd/system/%{name}*.*
%endif

%files devel
%defattr(-, root, root)
%{_bindir}/%{name}-unitests
%{_bindir}/%{name}-funtests
%{_bindir}/%{name}-citests
%{_prefix}/lib/python3*/site-packages/%{name}/*
%exclude %{_includedir}/*
%exclude %{_libdir}/lib%{name}*.so


%post
%systemd_post %{name}-mountd.service

%preun
%systemd_preun %{name}-mountd.service

%postun
%systemd_postun_with_restart %{name}-mountd.service

%changelog
* @RPMDATE@ Silofs <synarete@xxxxxxxx> @PACKAGE_VERSION@-@PACKAGE_RELEASE@.@PACKAGE_REVISION@
- Release @PACKAGE_REVISION@


